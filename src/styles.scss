$primary-color: #fdfabf;
$secondary-color: #d05717;
$third-color: #dd1c1a;
$text-color: #1e1e1e;
$main-text-color: #0f0f0f;
$secondary-text-color: grey;
$mobile-width: 1200px;

@font-face {
  font-family: "Poppins R";
  src: url("./assets/fonts/Poppins/Poppins-Regular.ttf");
}

@font-face {
  font-family: "Quicksand";
  src: url("./assets/fonts/Quicksand/Quicksand-VariableFont_wght.ttf");
}

body,
html {
  width: 100%;
}

* {
  color: $text-color;
}

h1,
h2,
h3,
h4,
h5 {
  color: $main-text-color;
  font-family: "Quicksand";
  font-display: swap;
}

h1 {
  font-size: 4rem;
}
h2 {
  font-size: 3.5rem;
}
h3 {
  font-size: 3rem;
}
h4 {
  font-size: 2.5rem;
}
h5 {
  font-size: 2rem;
}
p,
li {
  font-size: 1.3rem;
  font-family: "Quicksand";
}

small,
span {
  font-family: "Quicksand";
}

.secondary-text {
  color: $secondary-text-color;
}

.m-0 {
  margin: 0;
}

button {
  font-family: "Quicksand";
}

.animated {
  transition: 0.25s;
  &.fast {
    transition: 0.1s;
  }
  &.slow {
    transition: 0.6s;
  }
}

.full-screen {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

.flex-center-container {
  display: flex;
  align-items: center;
  place-content: center;
  &.buttons {
    column-gap: 1rem;
  }
}

.flex-start-container {
  display: flex;
  align-items: center;
  place-content: start;
  column-gap: 1rem;
}

.horizontal-card

.lg-width {
  width: 75vw;
}

.md-width {
  width: 50vw;
}

.sm-width {
  min-width: 25vw;
}

.lg-icon {
  width: 4rem;
  height: 4rem;
}

.md-icon {
  width: 3rem;
  height: 3rem;
}

.sm-icon {
  width: 2rem;
  height: 2rem;
}

.xs-icon {
  width: 1.2rem;
  height: 1.2rem;
}

.clickable {
  cursor: pointer;
}

i-feather {
  &.clickable:active {
    transform: scale(0.8);
  }
}

.fill-primary {
  fill: $primary-color;
}

.fill-second {
  fill: $secondary-color;
}

.fill-third {
  fill: $third-color;
}

.color-primary {
  color: $primary-color;
}

.color-second {
  color: $secondary-color;
}

.color-third {
  color: $third-color;
}

.stroke-primary {
  stroke: $primary-color;
}

.stroke-second {
  stroke: $secondary-color;
}

.stroke-third {
  stroke: $third-color;
}

.stroke-grey {
  stroke: $secondary-text-color;
}

form {
  .entryContainer {
    margin: 1.5rem 1rem;
    display: flex;
    flex-flow: column;
    align-items: center;
  }
  .inputContainer {
    display: flex;
    column-gap: 0.8rem;
    align-items: center;

    & > label {
      font-family: "Poppins R";
      font-size: 1.5rem;
      font-weight: bold;
      font-display: swap;
      align-items: center;
      display: flex;
      column-gap: 0.8rem;
    }

    & > input {
      height: 2rem;
      font-size: 1.5rem;
      padding: 0.2rem 0.4rem;
      border-width: 0 0 2px 0;
      border-color: gray;
      background-color: rgba(0, 102, 255, 0.219);
      &.ng-invalid.ng-dirty.ng-touched {
        background-color: rgba(255, 0, 0, 0.219);
      }

      &.ng-dirty.ng-touched.ng-valid {
        background-color: rgba(0, 255, 8, 0.219);
      }

      &:read-only {
        background-color: rgba(0, 0, 0, 0.219);
      }
    }
  }

  button:disabled {
    opacity: 0.5;
    color: lightgray;
    background-color: gray;
  }
}

.button-primary {
  font-size: 2rem;
  border: 0;
  padding: 1rem 2rem;
  background-color: $secondary-color;
  color: $primary-color;
  cursor: pointer;

  &:hover {
    background-color: darken($secondary-color, 5%);
  }

  &:active {
    background-color: darken($secondary-color, 10%);
  }
}

.button-secondary {
  font-size: 2rem;
  border: 4px solid $secondary-color;
  padding: 12px 28px;
  background-color: $primary-color;
  color: $secondary-color;
  cursor: pointer;

  &:hover {
    background-color: darken($primary-color, 10%);
  }

  &:active {
    background-color: darken($primary-color, 20%);
  }
}

.errorMessage {
  color: red;
}

//SPINNER
.spinner-container {
  background-color: rgba(128, 128, 128, 0.5);
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}

.spinner {
  animation: rotate 2s linear infinite;
  width: 50px;
  height: 50px;

  & .path {
    stroke: hsl(0, 0%, 100%);
    stroke-linecap: round;
    animation: dash 1.5s ease-in-out infinite;
  }
}

@keyframes rotate {
  100% {
    transform: rotate(360deg);
  }
}

@keyframes dash {
  0% {
    stroke-dasharray: 1, 150;
    stroke-dashoffset: 0;
  }
  50% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -35;
  }
  100% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -124;
  }
}
//END - SPINNER

@media only screen and (max-width: $mobile-width) {
  .lg-width {
    width: 100vw;
  }

  .md-width {
    width: 100vw;
  }

  .sm-width {
    width: 100vw;
  }

  form {
    section {
      div {
        flex-direction: column;
        label {
          margin-bottom: 1rem;
        }
      }
    }
  }

  .modal-container {
    overflow-y: auto;
    max-height: 80vh;
  }

  .flex-center-container {
    &.buttons {
      flex-direction: column;
      & > button {
        margin-bottom: 0.5rem;
      }
    }
  }

  .center-mobile{
    text-align: center;
  }
}